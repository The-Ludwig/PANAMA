name: Release to PyPi

on:
  workflow_dispatch:
  release:
    types: [published]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  release:
    strategy:
      matrix:
        python-version: ["3.11"]
        poetry-version: ["1.3"]
        corsika-version: ["77500"]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Install poetry
        run: pipx install poetry==${{ matrix.poetry-version }}
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "poetry"
      - name: Install dependencies
        run: poetry install --with dev
      - name: Cache Corsika7
        id: cache-corsika
        uses: actions/cache@v3
        env:
          cache-name: cache-corsika
        with:
          path: corsika-${{ matrix.corsika-version }}/run
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.corsika-version }}-${{ hashFiles('admin/config.h') }}
      - name: Install CORSIKA7
        run: admin/download_corsika.sh
        env:
          CORSIKA_PW: ${{ secrets.CORSIKA_PW }}
          CORSIKA_VERSION: ${{ matrix.corsika-version }}
      - name: Run tests
        run: poetry run coverage run --include="panama/**" -m pytest
      - name: Produce coverage xml
        run: poetry run coverage xml
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Deploy to PyPi
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
        run: poetry publish --build
